<div class="row col-md-offset-1">
    <div class="col-md-3">
        <div class="form-group">

            <div id="divAddress" class="form-group">
                <div class="input-group">
                    <span>Panel de Busqueda</span>
                    <input id="pac-input" class="form-control" id="client_address" type="text" placeholder="Busqueda..."/>
                </div>
            </div>

            <hr>
            <div id="divAddress" class="form-group">
                <p>Dirección de Envío</p>
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-info fa-fw"></i></span>
                    <input id="shippingAddress" class="form-control" type="text" disabled="true"/>
                </div>
            </div>


            <div id="divSaveClient" class="form-group">
                <button id="btnSaveClient" type="submit"  onclick="updateShippingAddress()" class="btn btn-success btn-block"/>Guardar</button>
            </div>

        </div>
        <hr>
    </div>
    <div class="col-md-1"></div>
    <div class="col-md-8">
        <!--map-->
        <div id="map" style="height:500px;"></div>
    </div>
</div>
{% block javascripts %}
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAnp3wmJHyAZLtUuMnJcvP1585lbdmcmV4&libraries=places&callback=initMap" async defer></script>
    <script>
        var map;
        var markers = [];
        var geocoder;

        function initMap() {
            geocoder = new google.maps.Geocoder;
            map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: -34.397, lng: 150.644},
                zoom: 6
            });
            var infoWindow = new google.maps.InfoWindow({map: map});

            // intentando recuperar geolocalización .
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    //centra el mapa en la posición 
                    map.setCenter(pos);
                    //hace zoom al mapa
                    map.setZoom(17);
                    //Crea el marcador
                    markers.push(createPlaceMarker(map, pos));
                }, function () {
                    // fallo al reconocer la ubicacion actual
                    handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
                // El navegador no soporta la geolocalización
                handleLocationError(false, infoWindow, map.getCenter());
            }

            //genera el nuevo marcador 
            google.maps.event.addListener(map, 'click', function (event) {
                var marker = createPlaceMarker(map, event.latLng)
                markers.push(marker);
            });

            // busqueda por 
            searchBox(map);
        }

        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
                    'Error: El servicio de Geolocalización Fallo.' :
                    'Error: Tu navegador no soporta el servicio de geolocalización');
        }

        //Funcion para crear el marker
        function createPlaceMarker(map, position) {
            var marker;
            var infoWindow = new google.maps.InfoWindow;

            //Elimina los marcadores actuales dentro del arreglo
            deletePlaceMarker();

            //crea en nuevo marcador de acuerdo a la seleccion en el mapa
            marker = new google.maps.Marker({
                position: position,
                map: map,
                draggable: true,
                animation: google.maps.Animation.DROP
            });

            //geolocalizacion mediante lat y long
            geocodeLatLng(geocoder, map, marker, position, infoWindow);

            google.maps.event.addListener(marker, "dragend", function () {
                var myLatlng = marker.getPosition();
                geocodeLatLng(geocoder, map, marker, myLatlng, infoWindow);
            });

            return marker;
        }

        function deletePlaceMarker() {
            if (markers.length > 0) {
                // Borra los marcadores
                markers.forEach(function (marker) {
                    marker.setMap(null);
                });
                markers = [];
            }
        }

        function searchBox(map) {
            // Crea el cuadro de búsqueda y lo vincúla al elemento de la interfaz de usuario.
            var input = document.getElementById('pac-input');
            var searchBox = new google.maps.places.SearchBox(input);

            // Bias los resultados de SearchBox hacia la vista del mapa actual.
            map.addListener('bounds_changed', function () {
                searchBox.setBounds(map.getBounds());
            });

            // ejecuta el evento cuando el usuario selecciona una 
            // predicción y recupera más detalles para ese lugar.
            searchBox.addListener('places_changed', function () {
                var places = searchBox.getPlaces();

                if (places.length === 0) {
                    return;
                }

                deletePlaceMarker();

                //  por cada lugar obtiene el nombre y la localización.
                var bounds = new google.maps.LatLngBounds();
                places.forEach(function (place) {
                    if (!place.geometry) {
                        console.log("El lugar encontrado no contiene geometría");
                        return;
                    }
                    var marker = createPlaceMarker(map, place.geometry.location);
                    markers.push(marker);

                    if (place.geometry.viewport) {
                        // Solo los códigos geográficos tienen ventana gráfica.
                        bounds.union(place.geometry.viewport);
                    } else {
                        bounds.extend(place.geometry.location);
                    }

                    document.getElementById('shippingAddress').value = place.formatted_address;
                });
                map.fitBounds(bounds);
            });
        }

        //a partir de la creación de un marcador, toma la localizacion y 
        //el mapa para dar una direccion
        function geocodeLatLng(geocoder, map, marker, position, infoWindow) {
            geocoder.geocode({'location': position}, function (results, status) {
                if (status === 'OK') {
                    if (results[0]) {
                        infoWindow.setContent(results[0].formatted_address);
                        infoWindow.open(map, marker);
                        document.getElementById('shippingAddress').value = results[0].formatted_address;
                    } else {
                        window.alert('No se encontraron resultados');
                    }
                } else {
                    window.alert('Geocoder failed due to: ' + status);
                }
            });
        }

        // Esconde todos los markers del mapa.
        function hideMarkers() {
            setMapOnAll(null);
        }
        
        function updateShippingAddress(){
                alert("la(s) direccion(es) han sido actualizadas con éxito")
            }

    </script>
{% endblock %}
